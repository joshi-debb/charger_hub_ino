
#include <LedControl.h>

LedControl mydisplay = LedControl(11, 10, 9,1);
void IniciarLedControl(){
  mydisplay.shutdown(0,false);
  mydisplay.setIntensity(0,10);
}
void LimpiarDisplay(){
    mydisplay.clearDisplay(0);
}
byte bufferCelular [8][8] = {   { 0, 0, 1, 0, 0, 1, 0, 0}, 
                                { 0, 0, 1, 0, 0, 1, 0, 0},
                                { 1, 1, 1, 1, 1, 1, 1, 1},
                                { 0, 0, 1, 0, 0, 1, 0, 0},
                                { 0, 0, 1, 0, 0, 1, 0, 0},
                                { 1, 1, 1, 1, 1, 1, 1, 1},
                                { 0, 0, 1, 0, 0, 1, 0, 0},
                                { 0, 0, 1, 0, 0, 1, 0, 0}  
};
void LedCompartimientos(){
    for (int i = 0; i < 8; i++){
      for(int j = 0; j < 8; j++){
           mydisplay.setLed(0, i, j, bufferCelular[i][j] == 1 ? true : false);
     } 
   }
}
byte Letra_A [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 1, 1, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0}  
};

byte Letra_B [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 1, 1, 1, 0, 0}  
};

byte Letra_C [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0}  
};

byte Letra_D [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 1, 1, 1, 0, 0}  
};

byte Letra_E [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 1, 1, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 1, 1, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 1, 1, 1, 1, 0}  
};

byte Letra_F [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 1, 1, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 1, 1, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0}  
};

byte Letra_G [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 1, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0}  
};

byte Letra_H [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 1, 1, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0}  
};

byte Letra_I [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0}  
};

byte Letra_J [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 0, 1, 1, 1, 1, 0},
                            { 0, 0, 0, 0, 1, 1, 0, 0},
                            { 0, 0, 0, 0, 1, 1, 0, 0},
                            { 0, 0, 0, 0, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 1, 1, 0, 0},
                            { 0, 0, 1, 1, 1, 0, 0, 0}  
};
byte Letra_K [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 1, 1, 0, 0},
                            { 0, 1, 1, 1, 1, 0, 0, 0},
                            { 0, 1, 1, 1, 0, 0, 0, 0},
                            { 0, 1, 1, 1, 1, 0, 0, 0},
                            { 0, 1, 1, 0, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0}  
};

byte Letra_L [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 1, 1, 1, 0, 0}  
};
byte Letra_M [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 1, 1, 1, 0, 1, 1, 1},
                            { 0, 1, 1, 1, 1, 1, 1, 1},
                            { 0, 1, 1, 0, 1, 0, 1, 1},
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 1, 1, 0, 0, 0, 1, 1}  
};

byte Letra_N [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 1, 1, 1, 0, 0, 1, 1},
                            { 0, 1, 1, 1, 1, 0, 1, 1},
                            { 0, 1, 1, 0, 1, 1, 1, 1},
                            { 0, 1, 1, 0, 0, 1, 1, 1},
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 1, 1, 0, 0, 0, 1, 1}  
};

byte Letra_O [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0}  
};

byte Letra_P [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0}  
};

byte Letra_Q [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 1, 1, 1, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 0, 0, 0, 0, 1, 1, 0}  
};

byte Letra_R [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 1, 1, 0, 0, 0},
                            { 0, 1, 1, 0, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0}  
};

byte Letra_S [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 0, 0, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0}  
};

byte Letra_T [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 1, 1, 1, 1, 0},
                            { 0, 1, 0, 1, 1, 0, 1, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0}  
};

byte Letra_U [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 0, 1, 1, 1, 1, 1, 0}  
};

byte Letra_V [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0}  
};

byte Letra_W [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 1, 1, 0, 1, 0, 1, 1},
                            { 0, 1, 1, 1, 1, 1, 1, 1},
                            { 0, 1, 1, 1, 0, 1, 1, 1},
                            { 0, 1, 1, 0, 0, 0, 1, 1}  
};

byte Letra_X [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 0, 1, 1, 0, 1, 1, 0},
                            { 0, 0, 0, 1, 1, 1, 0, 0},
                            { 0, 0, 1, 1, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 0, 1, 1},
                            { 0, 1, 1, 0, 0, 0, 1, 1}  
};

byte Letra_Y [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0}  
};

byte Letra_Z [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 1, 1, 1, 1, 1, 1, 0},
                            { 0, 0, 0, 0, 0, 1, 1, 0},
                            { 0, 0, 0, 0, 1, 1, 0, 0},
                            { 0, 0, 0, 1, 1, 0, 0, 0},
                            { 0, 0, 1, 1, 0, 0, 0, 0},
                            { 0, 1, 1, 0, 0, 0, 0, 0},
                            { 0, 1, 1, 1, 1, 1, 1, 0}  
};

byte Numero_0 [8][8] = {    { 0, 0, 1, 1, 1, 1, 0, 0}, 
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 1, 1, 1, 0},
                            { 0, 1, 1, 1, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 1, 1, 0, 0, 1, 1, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0}  
};

byte Asterisco [8][8] = {   { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 0, 0, 0, 0, 0, 0},
                            { 0, 0, 1, 1, 0, 1, 1, 0},
                            { 0, 0, 0, 1, 1, 1, 0, 0},
                            { 0, 1, 1, 1, 1, 1, 1, 1},
                            { 0, 0, 0, 1, 1, 1, 0, 0},
                            { 0, 0, 1, 1, 0, 1, 1, 0},
                            { 0, 0, 0, 0, 0, 0, 0, 0}  
};

byte Numeral [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 1, 1, 0, 1, 1, 0},
                            { 0, 0, 1, 1, 0, 1, 1, 0},
                            { 0, 1, 1, 1, 1, 1, 1, 1},
                            { 0, 0, 1, 1, 0, 1, 1, 0},
                            { 0, 1, 1, 1, 1, 1, 1, 1},
                            { 0, 0, 1, 1, 0, 1, 1, 0},
                            { 0, 0, 1, 1, 0, 1, 1, 0}  
};

byte Dolar [8][8] = {       { 0, 0, 0, 0, 0, 0, 0, 0}, 
                            { 0, 0, 0, 0, 1, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 1, 1, 0},
                            { 0, 0, 1, 0, 0, 0, 0, 0},
                            { 0, 0, 0, 1, 1, 1, 0, 0},
                            { 0, 0, 0, 0, 0, 0, 1, 0},
                            { 0, 0, 1, 1, 1, 1, 0, 0},
                            { 0, 0, 0, 0, 1, 0, 0, 0}  
};

byte Exclamacion [8][8] = {     { 0, 0, 0, 0, 0, 0, 0, 0}, 
                                { 0, 0, 0, 1, 1, 0, 0, 0},
                                { 0, 0, 1, 1, 1, 1, 0, 0},
                                { 0, 0, 1, 1, 1, 1, 0, 0},
                                { 0, 0, 0, 1, 1, 0, 0, 0},
                                { 0, 0, 0, 1, 1, 0, 0, 0},
                                { 0, 0, 0, 0, 0, 0, 0, 0},
                                { 0, 0, 0, 1, 1, 0, 0, 0}  
};

void ImprimirLetra(byte buffer[8][8]){
   for (int i = 0; i < 8; i++){
      for(int j = 0; j < 8; j++){
           mydisplay.setLed(0, i, j, buffer[i][j] == 1 ? true : false);
     } 
   }
}
class ABDC{
    public:
        char Letras[31]= {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','0','*','#','$','!'};
        char getLetra(int indice){
                return Letras[indice];
        }
        void ViewMatriz(int opcion){
            switch (opcion)
            {
            case 0:
                ImprimirLetra(Letra_A);
                break;
            case 1:
                ImprimirLetra(Letra_B);
                break;
            case 2:
                ImprimirLetra(Letra_C);
                break;
            case 3:
                ImprimirLetra(Letra_D);
                break;
            case 4:
                ImprimirLetra(Letra_E);
                break;
            case 5:
                ImprimirLetra(Letra_F);
                break;
            case 6:
                ImprimirLetra(Letra_G);
                break;
            case 7:
                ImprimirLetra(Letra_H);
                break;
            case 8:
                ImprimirLetra(Letra_I);
                break;
            case 9:
                ImprimirLetra(Letra_J);
                break;
            case 10:
                ImprimirLetra(Letra_K);
                break;
            case 11:
                ImprimirLetra(Letra_L);
                break;
            case 12:
                ImprimirLetra(Letra_M);
                break;
            case 13:
                ImprimirLetra(Letra_N);
                break;
            case 14:
                ImprimirLetra(Letra_O);
                break;
            case 15:
                ImprimirLetra(Letra_P);
                break;
            case 16:
                ImprimirLetra(Letra_Q);
                break;
            case 17:
                ImprimirLetra(Letra_R);
                break;
            case 18:
                ImprimirLetra(Letra_S);
                break;
            case 19:
                ImprimirLetra(Letra_T);
                break;
            case 20:
                ImprimirLetra(Letra_U);
                break;
            case 21:
                ImprimirLetra(Letra_V);
                break;
            case 22:
                ImprimirLetra(Letra_W);
                break;
            case 23:
                ImprimirLetra(Letra_X);
                break;
            case 24:
                ImprimirLetra(Letra_Y);
                break;
            case 25:
                ImprimirLetra(Letra_Z);
                break;
            case 26:
                ImprimirLetra(Numero_0);
                break;
            case 27:
                ImprimirLetra(Asterisco);
                break;
            case 28:
                ImprimirLetra(Numeral);
                break;
            case 29:
                ImprimirLetra(Dolar);
                break;
            case 30:
                ImprimirLetra(Exclamacion);
                break;
            default:
                break;
            }
        }
        

};

 void AgregarCelular(int estado){
            if(estado == 1){
                for (int i = 0; i < 2; i++){
                    for(int j = 0; j < 2; j++){
                           bufferCelular[i][j] = 1;
                    } 
                }
            }else if(estado == 2){
                for (int i = 0; i < 2; i++){
                    for(int j = 3; j < 5; j++){
                           bufferCelular[i][j] = 1;
                    } 
                }
            }else if(estado == 3){
                for (int i = 0; i < 2; i++){
                    for(int j = 6; j < 8; j++){
                           bufferCelular[i][j] = 1;
                    } 
                }
            }else if(estado == 4){
                 for (int i = 3; i < 5; i++){
                    for(int j = 0; j < 2; j++){
                           bufferCelular[i][j] = 1;
                    } 
                }
            }else if(estado == 5){
                for (int i = 3; i < 5; i++){
                    for(int j = 3; j < 5; j++){
                           bufferCelular[i][j] = 1;
                    } 
                }
            }else if(estado == 6){
                for (int i = 3; i < 5; i++){
                    for(int j = 6; j < 8; j++){
                           bufferCelular[i][j] = 1;
                    } 
                }
            }else if(estado == 7){
                for (int i = 6; i < 8; i++){
                    for(int j = 0; j < 2; j++){
                           bufferCelular[i][j] = 1;
                    } 
                }
            }else if(estado == 8){
                for (int i = 6; i < 8; i++){
                    for(int j = 3; j < 5; j++){
                           bufferCelular[i][j] = 1;
                    } 
                }
            }else if(estado == 9){
                for (int i = 6; i < 8; i++){
                    for(int j = 6; j < 8; j++){
                           bufferCelular[i][j] = 1;
                    } 
                }
            }
      }

void QuitarCelular(int estado){
            if(estado == 1){
                for (int i = 0; i < 2; i++){
                    for(int j = 0; j < 2; j++){
                           bufferCelular[i][j] = 0;
                    } 
                }
            }else if(estado == 2){
                for (int i = 0; i < 2; i++){
                    for(int j = 3; j < 5; j++){
                           bufferCelular[i][j] = 0;
                    } 
                }
            }else if(estado == 3){
                for (int i = 0; i < 2; i++){
                    for(int j = 6; j < 8; j++){
                           bufferCelular[i][j] = 0;
                    } 
                }
            }else if(estado == 4){
                 for (int i = 3; i < 5; i++){
                    for(int j = 0; j < 2; j++){
                           bufferCelular[i][j] = 0;
                    } 
                }
            }else if(estado == 5){
                for (int i = 3; i < 5; i++){
                    for(int j = 3; j < 5; j++){
                           bufferCelular[i][j] = 0;
                    } 
                }
            }else if(estado == 6){
                for (int i = 3; i < 5; i++){
                    for(int j = 6; j < 8; j++){
                           bufferCelular[i][j] = 0;
                    } 
                }
            }else if(estado == 7){
                for (int i = 6; i < 8; i++){
                    for(int j = 0; j < 2; j++){
                           bufferCelular[i][j] = 0;
                    } 
                }
            }else if(estado == 8){
                for (int i = 6; i < 8; i++){
                    for(int j = 3; j < 5; j++){
                           bufferCelular[i][j] = 0;
                    } 
                }
            }else if(estado == 9){
                for (int i = 6; i < 8; i++){
                    for(int j = 6; j < 8; j++){
                           bufferCelular[i][j] = 0;
                    } 
                }
            }
      }